/*
 * Rumble API
 *
 * Rumble Network Discovery API
 *
 * API version: 1.0.4
 * Contact: support@rumble.run
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
)

// ScanOptions struct for ScanOptions
type ScanOptions struct {
	Targets string `json:"targets"`
	Excludes *string `json:"excludes,omitempty"`
	ScanName *string `json:"scan-name,omitempty"`
	ScanDescription *string `json:"scan-description,omitempty"`
	ScanFrequency *string `json:"scan-frequency,omitempty"`
	ScanStart *int32 `json:"scan-start,omitempty"`
	Agent *string `json:"agent,omitempty"`
	Rate *int32 `json:"rate,omitempty"`
	MaxHostRate *int32 `json:"max-host-rate,omitempty"`
	Passes *int32 `json:"passes,omitempty"`
	MaxSockets *int32 `json:"max-sockets,omitempty"`
	MaxGroupSize *int32 `json:"max-group-size,omitempty"`
	TcpPorts *string `json:"tcp-ports,omitempty"`
	Screenshots *bool `json:"screenshots,omitempty"`
	Nameservers *string `json:"nameservers,omitempty"`
	// Optional probe list, otherwise all probes are used
	Probes *string `json:"probes,omitempty"`
}

// NewScanOptions instantiates a new ScanOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScanOptions(targets string, ) *ScanOptions {
	this := ScanOptions{}
	this.Targets = targets
	return &this
}

// NewScanOptionsWithDefaults instantiates a new ScanOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScanOptionsWithDefaults() *ScanOptions {
	this := ScanOptions{}
	return &this
}

// GetTargets returns the Targets field value
func (o *ScanOptions) GetTargets() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetTargetsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Targets, true
}

// SetTargets sets field value
func (o *ScanOptions) SetTargets(v string) {
	o.Targets = v
}

// GetExcludes returns the Excludes field value if set, zero value otherwise.
func (o *ScanOptions) GetExcludes() string {
	if o == nil || o.Excludes == nil {
		var ret string
		return ret
	}
	return *o.Excludes
}

// GetExcludesOk returns a tuple with the Excludes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetExcludesOk() (*string, bool) {
	if o == nil || o.Excludes == nil {
		return nil, false
	}
	return o.Excludes, true
}

// HasExcludes returns a boolean if a field has been set.
func (o *ScanOptions) HasExcludes() bool {
	if o != nil && o.Excludes != nil {
		return true
	}

	return false
}

// SetExcludes gets a reference to the given string and assigns it to the Excludes field.
func (o *ScanOptions) SetExcludes(v string) {
	o.Excludes = &v
}

// GetScanName returns the ScanName field value if set, zero value otherwise.
func (o *ScanOptions) GetScanName() string {
	if o == nil || o.ScanName == nil {
		var ret string
		return ret
	}
	return *o.ScanName
}

// GetScanNameOk returns a tuple with the ScanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetScanNameOk() (*string, bool) {
	if o == nil || o.ScanName == nil {
		return nil, false
	}
	return o.ScanName, true
}

// HasScanName returns a boolean if a field has been set.
func (o *ScanOptions) HasScanName() bool {
	if o != nil && o.ScanName != nil {
		return true
	}

	return false
}

// SetScanName gets a reference to the given string and assigns it to the ScanName field.
func (o *ScanOptions) SetScanName(v string) {
	o.ScanName = &v
}

// GetScanDescription returns the ScanDescription field value if set, zero value otherwise.
func (o *ScanOptions) GetScanDescription() string {
	if o == nil || o.ScanDescription == nil {
		var ret string
		return ret
	}
	return *o.ScanDescription
}

// GetScanDescriptionOk returns a tuple with the ScanDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetScanDescriptionOk() (*string, bool) {
	if o == nil || o.ScanDescription == nil {
		return nil, false
	}
	return o.ScanDescription, true
}

// HasScanDescription returns a boolean if a field has been set.
func (o *ScanOptions) HasScanDescription() bool {
	if o != nil && o.ScanDescription != nil {
		return true
	}

	return false
}

// SetScanDescription gets a reference to the given string and assigns it to the ScanDescription field.
func (o *ScanOptions) SetScanDescription(v string) {
	o.ScanDescription = &v
}

// GetScanFrequency returns the ScanFrequency field value if set, zero value otherwise.
func (o *ScanOptions) GetScanFrequency() string {
	if o == nil || o.ScanFrequency == nil {
		var ret string
		return ret
	}
	return *o.ScanFrequency
}

// GetScanFrequencyOk returns a tuple with the ScanFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetScanFrequencyOk() (*string, bool) {
	if o == nil || o.ScanFrequency == nil {
		return nil, false
	}
	return o.ScanFrequency, true
}

// HasScanFrequency returns a boolean if a field has been set.
func (o *ScanOptions) HasScanFrequency() bool {
	if o != nil && o.ScanFrequency != nil {
		return true
	}

	return false
}

// SetScanFrequency gets a reference to the given string and assigns it to the ScanFrequency field.
func (o *ScanOptions) SetScanFrequency(v string) {
	o.ScanFrequency = &v
}

// GetScanStart returns the ScanStart field value if set, zero value otherwise.
func (o *ScanOptions) GetScanStart() int32 {
	if o == nil || o.ScanStart == nil {
		var ret int32
		return ret
	}
	return *o.ScanStart
}

// GetScanStartOk returns a tuple with the ScanStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetScanStartOk() (*int32, bool) {
	if o == nil || o.ScanStart == nil {
		return nil, false
	}
	return o.ScanStart, true
}

// HasScanStart returns a boolean if a field has been set.
func (o *ScanOptions) HasScanStart() bool {
	if o != nil && o.ScanStart != nil {
		return true
	}

	return false
}

// SetScanStart gets a reference to the given int32 and assigns it to the ScanStart field.
func (o *ScanOptions) SetScanStart(v int32) {
	o.ScanStart = &v
}

// GetAgent returns the Agent field value if set, zero value otherwise.
func (o *ScanOptions) GetAgent() string {
	if o == nil || o.Agent == nil {
		var ret string
		return ret
	}
	return *o.Agent
}

// GetAgentOk returns a tuple with the Agent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetAgentOk() (*string, bool) {
	if o == nil || o.Agent == nil {
		return nil, false
	}
	return o.Agent, true
}

// HasAgent returns a boolean if a field has been set.
func (o *ScanOptions) HasAgent() bool {
	if o != nil && o.Agent != nil {
		return true
	}

	return false
}

// SetAgent gets a reference to the given string and assigns it to the Agent field.
func (o *ScanOptions) SetAgent(v string) {
	o.Agent = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *ScanOptions) GetRate() int32 {
	if o == nil || o.Rate == nil {
		var ret int32
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetRateOk() (*int32, bool) {
	if o == nil || o.Rate == nil {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *ScanOptions) HasRate() bool {
	if o != nil && o.Rate != nil {
		return true
	}

	return false
}

// SetRate gets a reference to the given int32 and assigns it to the Rate field.
func (o *ScanOptions) SetRate(v int32) {
	o.Rate = &v
}

// GetMaxHostRate returns the MaxHostRate field value if set, zero value otherwise.
func (o *ScanOptions) GetMaxHostRate() int32 {
	if o == nil || o.MaxHostRate == nil {
		var ret int32
		return ret
	}
	return *o.MaxHostRate
}

// GetMaxHostRateOk returns a tuple with the MaxHostRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetMaxHostRateOk() (*int32, bool) {
	if o == nil || o.MaxHostRate == nil {
		return nil, false
	}
	return o.MaxHostRate, true
}

// HasMaxHostRate returns a boolean if a field has been set.
func (o *ScanOptions) HasMaxHostRate() bool {
	if o != nil && o.MaxHostRate != nil {
		return true
	}

	return false
}

// SetMaxHostRate gets a reference to the given int32 and assigns it to the MaxHostRate field.
func (o *ScanOptions) SetMaxHostRate(v int32) {
	o.MaxHostRate = &v
}

// GetPasses returns the Passes field value if set, zero value otherwise.
func (o *ScanOptions) GetPasses() int32 {
	if o == nil || o.Passes == nil {
		var ret int32
		return ret
	}
	return *o.Passes
}

// GetPassesOk returns a tuple with the Passes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetPassesOk() (*int32, bool) {
	if o == nil || o.Passes == nil {
		return nil, false
	}
	return o.Passes, true
}

// HasPasses returns a boolean if a field has been set.
func (o *ScanOptions) HasPasses() bool {
	if o != nil && o.Passes != nil {
		return true
	}

	return false
}

// SetPasses gets a reference to the given int32 and assigns it to the Passes field.
func (o *ScanOptions) SetPasses(v int32) {
	o.Passes = &v
}

// GetMaxSockets returns the MaxSockets field value if set, zero value otherwise.
func (o *ScanOptions) GetMaxSockets() int32 {
	if o == nil || o.MaxSockets == nil {
		var ret int32
		return ret
	}
	return *o.MaxSockets
}

// GetMaxSocketsOk returns a tuple with the MaxSockets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetMaxSocketsOk() (*int32, bool) {
	if o == nil || o.MaxSockets == nil {
		return nil, false
	}
	return o.MaxSockets, true
}

// HasMaxSockets returns a boolean if a field has been set.
func (o *ScanOptions) HasMaxSockets() bool {
	if o != nil && o.MaxSockets != nil {
		return true
	}

	return false
}

// SetMaxSockets gets a reference to the given int32 and assigns it to the MaxSockets field.
func (o *ScanOptions) SetMaxSockets(v int32) {
	o.MaxSockets = &v
}

// GetMaxGroupSize returns the MaxGroupSize field value if set, zero value otherwise.
func (o *ScanOptions) GetMaxGroupSize() int32 {
	if o == nil || o.MaxGroupSize == nil {
		var ret int32
		return ret
	}
	return *o.MaxGroupSize
}

// GetMaxGroupSizeOk returns a tuple with the MaxGroupSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetMaxGroupSizeOk() (*int32, bool) {
	if o == nil || o.MaxGroupSize == nil {
		return nil, false
	}
	return o.MaxGroupSize, true
}

// HasMaxGroupSize returns a boolean if a field has been set.
func (o *ScanOptions) HasMaxGroupSize() bool {
	if o != nil && o.MaxGroupSize != nil {
		return true
	}

	return false
}

// SetMaxGroupSize gets a reference to the given int32 and assigns it to the MaxGroupSize field.
func (o *ScanOptions) SetMaxGroupSize(v int32) {
	o.MaxGroupSize = &v
}

// GetTcpPorts returns the TcpPorts field value if set, zero value otherwise.
func (o *ScanOptions) GetTcpPorts() string {
	if o == nil || o.TcpPorts == nil {
		var ret string
		return ret
	}
	return *o.TcpPorts
}

// GetTcpPortsOk returns a tuple with the TcpPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetTcpPortsOk() (*string, bool) {
	if o == nil || o.TcpPorts == nil {
		return nil, false
	}
	return o.TcpPorts, true
}

// HasTcpPorts returns a boolean if a field has been set.
func (o *ScanOptions) HasTcpPorts() bool {
	if o != nil && o.TcpPorts != nil {
		return true
	}

	return false
}

// SetTcpPorts gets a reference to the given string and assigns it to the TcpPorts field.
func (o *ScanOptions) SetTcpPorts(v string) {
	o.TcpPorts = &v
}

// GetScreenshots returns the Screenshots field value if set, zero value otherwise.
func (o *ScanOptions) GetScreenshots() bool {
	if o == nil || o.Screenshots == nil {
		var ret bool
		return ret
	}
	return *o.Screenshots
}

// GetScreenshotsOk returns a tuple with the Screenshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetScreenshotsOk() (*bool, bool) {
	if o == nil || o.Screenshots == nil {
		return nil, false
	}
	return o.Screenshots, true
}

// HasScreenshots returns a boolean if a field has been set.
func (o *ScanOptions) HasScreenshots() bool {
	if o != nil && o.Screenshots != nil {
		return true
	}

	return false
}

// SetScreenshots gets a reference to the given bool and assigns it to the Screenshots field.
func (o *ScanOptions) SetScreenshots(v bool) {
	o.Screenshots = &v
}

// GetNameservers returns the Nameservers field value if set, zero value otherwise.
func (o *ScanOptions) GetNameservers() string {
	if o == nil || o.Nameservers == nil {
		var ret string
		return ret
	}
	return *o.Nameservers
}

// GetNameserversOk returns a tuple with the Nameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetNameserversOk() (*string, bool) {
	if o == nil || o.Nameservers == nil {
		return nil, false
	}
	return o.Nameservers, true
}

// HasNameservers returns a boolean if a field has been set.
func (o *ScanOptions) HasNameservers() bool {
	if o != nil && o.Nameservers != nil {
		return true
	}

	return false
}

// SetNameservers gets a reference to the given string and assigns it to the Nameservers field.
func (o *ScanOptions) SetNameservers(v string) {
	o.Nameservers = &v
}

// GetProbes returns the Probes field value if set, zero value otherwise.
func (o *ScanOptions) GetProbes() string {
	if o == nil || o.Probes == nil {
		var ret string
		return ret
	}
	return *o.Probes
}

// GetProbesOk returns a tuple with the Probes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanOptions) GetProbesOk() (*string, bool) {
	if o == nil || o.Probes == nil {
		return nil, false
	}
	return o.Probes, true
}

// HasProbes returns a boolean if a field has been set.
func (o *ScanOptions) HasProbes() bool {
	if o != nil && o.Probes != nil {
		return true
	}

	return false
}

// SetProbes gets a reference to the given string and assigns it to the Probes field.
func (o *ScanOptions) SetProbes(v string) {
	o.Probes = &v
}

func (o ScanOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["targets"] = o.Targets
	}
	if o.Excludes != nil {
		toSerialize["excludes"] = o.Excludes
	}
	if o.ScanName != nil {
		toSerialize["scan-name"] = o.ScanName
	}
	if o.ScanDescription != nil {
		toSerialize["scan-description"] = o.ScanDescription
	}
	if o.ScanFrequency != nil {
		toSerialize["scan-frequency"] = o.ScanFrequency
	}
	if o.ScanStart != nil {
		toSerialize["scan-start"] = o.ScanStart
	}
	if o.Agent != nil {
		toSerialize["agent"] = o.Agent
	}
	if o.Rate != nil {
		toSerialize["rate"] = o.Rate
	}
	if o.MaxHostRate != nil {
		toSerialize["max-host-rate"] = o.MaxHostRate
	}
	if o.Passes != nil {
		toSerialize["passes"] = o.Passes
	}
	if o.MaxSockets != nil {
		toSerialize["max-sockets"] = o.MaxSockets
	}
	if o.MaxGroupSize != nil {
		toSerialize["max-group-size"] = o.MaxGroupSize
	}
	if o.TcpPorts != nil {
		toSerialize["tcp-ports"] = o.TcpPorts
	}
	if o.Screenshots != nil {
		toSerialize["screenshots"] = o.Screenshots
	}
	if o.Nameservers != nil {
		toSerialize["nameservers"] = o.Nameservers
	}
	if o.Probes != nil {
		toSerialize["probes"] = o.Probes
	}
	return json.Marshal(toSerialize)
}

type NullableScanOptions struct {
	value *ScanOptions
	isSet bool
}

func (v NullableScanOptions) Get() *ScanOptions {
	return v.value
}

func (v *NullableScanOptions) Set(val *ScanOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableScanOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableScanOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScanOptions(val *ScanOptions) *NullableScanOptions {
	return &NullableScanOptions{value: val, isSet: true}
}

func (v NullableScanOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScanOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
