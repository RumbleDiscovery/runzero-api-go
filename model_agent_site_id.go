/*
 * Rumble API
 *
 * Rumble Network Discovery API
 *
 * API version: 1.0.4
 * Contact: support@rumble.run
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
)

// AgentSiteID struct for AgentSiteID
type AgentSiteID struct {
	SiteId string `json:"site_id"`
}

// NewAgentSiteID instantiates a new AgentSiteID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentSiteID(siteId string, ) *AgentSiteID {
	this := AgentSiteID{}
	this.SiteId = siteId
	return &this
}

// NewAgentSiteIDWithDefaults instantiates a new AgentSiteID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentSiteIDWithDefaults() *AgentSiteID {
	this := AgentSiteID{}
	return &this
}

// GetSiteId returns the SiteId field value
func (o *AgentSiteID) GetSiteId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value
// and a boolean to check if the value has been set.
func (o *AgentSiteID) GetSiteIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SiteId, true
}

// SetSiteId sets field value
func (o *AgentSiteID) SetSiteId(v string) {
	o.SiteId = v
}

func (o AgentSiteID) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["site_id"] = o.SiteId
	}
	return json.Marshal(toSerialize)
}

type NullableAgentSiteID struct {
	value *AgentSiteID
	isSet bool
}

func (v NullableAgentSiteID) Get() *AgentSiteID {
	return v.value
}

func (v *NullableAgentSiteID) Set(val *AgentSiteID) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentSiteID) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentSiteID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentSiteID(val *AgentSiteID) *NullableAgentSiteID {
	return &NullableAgentSiteID{value: val, isSet: true}
}

func (v NullableAgentSiteID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentSiteID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
