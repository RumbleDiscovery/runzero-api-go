/*
 * Rumble API
 *
 * Rumble Network Discovery API
 *
 * API version: 1.0.4
 * Contact: support@rumble.run
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
)

// AssetComments struct for AssetComments
type AssetComments struct {
	Comments string `json:"comments"`
}

// NewAssetComments instantiates a new AssetComments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetComments(comments string, ) *AssetComments {
	this := AssetComments{}
	this.Comments = comments
	return &this
}

// NewAssetCommentsWithDefaults instantiates a new AssetComments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetCommentsWithDefaults() *AssetComments {
	this := AssetComments{}
	return &this
}

// GetComments returns the Comments field value
func (o *AssetComments) GetComments() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *AssetComments) GetCommentsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Comments, true
}

// SetComments sets field value
func (o *AssetComments) SetComments(v string) {
	o.Comments = v
}

func (o AssetComments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["comments"] = o.Comments
	}
	return json.Marshal(toSerialize)
}

type NullableAssetComments struct {
	value *AssetComments
	isSet bool
}

func (v NullableAssetComments) Get() *AssetComments {
	return v.value
}

func (v *NullableAssetComments) Set(val *AssetComments) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetComments) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetComments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetComments(val *AssetComments) *NullableAssetComments {
	return &NullableAssetComments{value: val, isSet: true}
}

func (v NullableAssetComments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetComments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
