/*
 * Rumble API
 *
 * Rumble Network Discovery API
 *
 * API version: 1.0.4
 * Contact: support@rumble.run
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
)

// Task struct for Task
type Task struct {
	Id string `json:"id"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	ClientId *string `json:"client_id,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	AgentId *string `json:"agent_id,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	CruncherId *string `json:"cruncher_id,omitempty"`
	CreatedAt *int64 `json:"created_at,omitempty"`
	CreatedBy *string `json:"created_by,omitempty"`
	CreatedByUserId *string `json:"created_by_user_id,omitempty"`
	UpdatedAt *int64 `json:"updated_at,omitempty"`
	Type *string `json:"type,omitempty"`
	Status *string `json:"status,omitempty"`
	Error *string `json:"error,omitempty"`
	Params *map[string]string `json:"params,omitempty"`
	Stats *map[string]map[string]interface{} `json:"stats,omitempty"`
	Hidden *bool `json:"hidden,omitempty"`
	ParentId *string `json:"parent_id,omitempty"`
	Recur *bool `json:"recur,omitempty"`
	RecurFrequency *string `json:"recur_frequency,omitempty"`
	StartTime *int64 `json:"start_time,omitempty"`
	RecurLast *int64 `json:"recur_last,omitempty"`
	RecurNext *int64 `json:"recur_next,omitempty"`
	RecurLastTaskId *string `json:"recur_last_task_id,omitempty"`
}

// NewTask instantiates a new Task object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTask(id string, ) *Task {
	this := Task{}
	this.Id = id
	return &this
}

// NewTaskWithDefaults instantiates a new Task object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskWithDefaults() *Task {
	this := Task{}
	return &this
}

// GetId returns the Id field value
func (o *Task) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Task) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Task) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Task) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Task) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Task) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Task) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Task) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Task) SetDescription(v string) {
	o.Description = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *Task) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *Task) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *Task) SetClientId(v string) {
	o.ClientId = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *Task) GetOrganizationId() string {
	if o == nil || o.OrganizationId == nil {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetOrganizationIdOk() (*string, bool) {
	if o == nil || o.OrganizationId == nil {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *Task) HasOrganizationId() bool {
	if o != nil && o.OrganizationId != nil {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *Task) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *Task) GetAgentId() string {
	if o == nil || o.AgentId == nil {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetAgentIdOk() (*string, bool) {
	if o == nil || o.AgentId == nil {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *Task) HasAgentId() bool {
	if o != nil && o.AgentId != nil {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *Task) SetAgentId(v string) {
	o.AgentId = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *Task) GetSiteId() string {
	if o == nil || o.SiteId == nil {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetSiteIdOk() (*string, bool) {
	if o == nil || o.SiteId == nil {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *Task) HasSiteId() bool {
	if o != nil && o.SiteId != nil {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *Task) SetSiteId(v string) {
	o.SiteId = &v
}

// GetCruncherId returns the CruncherId field value if set, zero value otherwise.
func (o *Task) GetCruncherId() string {
	if o == nil || o.CruncherId == nil {
		var ret string
		return ret
	}
	return *o.CruncherId
}

// GetCruncherIdOk returns a tuple with the CruncherId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetCruncherIdOk() (*string, bool) {
	if o == nil || o.CruncherId == nil {
		return nil, false
	}
	return o.CruncherId, true
}

// HasCruncherId returns a boolean if a field has been set.
func (o *Task) HasCruncherId() bool {
	if o != nil && o.CruncherId != nil {
		return true
	}

	return false
}

// SetCruncherId gets a reference to the given string and assigns it to the CruncherId field.
func (o *Task) SetCruncherId(v string) {
	o.CruncherId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Task) GetCreatedAt() int64 {
	if o == nil || o.CreatedAt == nil {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetCreatedAtOk() (*int64, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Task) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *Task) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Task) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Task) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *Task) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedByUserId returns the CreatedByUserId field value if set, zero value otherwise.
func (o *Task) GetCreatedByUserId() string {
	if o == nil || o.CreatedByUserId == nil {
		var ret string
		return ret
	}
	return *o.CreatedByUserId
}

// GetCreatedByUserIdOk returns a tuple with the CreatedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetCreatedByUserIdOk() (*string, bool) {
	if o == nil || o.CreatedByUserId == nil {
		return nil, false
	}
	return o.CreatedByUserId, true
}

// HasCreatedByUserId returns a boolean if a field has been set.
func (o *Task) HasCreatedByUserId() bool {
	if o != nil && o.CreatedByUserId != nil {
		return true
	}

	return false
}

// SetCreatedByUserId gets a reference to the given string and assigns it to the CreatedByUserId field.
func (o *Task) SetCreatedByUserId(v string) {
	o.CreatedByUserId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Task) GetUpdatedAt() int64 {
	if o == nil || o.UpdatedAt == nil {
		var ret int64
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetUpdatedAtOk() (*int64, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Task) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int64 and assigns it to the UpdatedAt field.
func (o *Task) SetUpdatedAt(v int64) {
	o.UpdatedAt = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Task) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Task) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Task) SetType(v string) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Task) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Task) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Task) SetStatus(v string) {
	o.Status = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *Task) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *Task) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *Task) SetError(v string) {
	o.Error = &v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *Task) GetParams() map[string]string {
	if o == nil || o.Params == nil {
		var ret map[string]string
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetParamsOk() (*map[string]string, bool) {
	if o == nil || o.Params == nil {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *Task) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given map[string]string and assigns it to the Params field.
func (o *Task) SetParams(v map[string]string) {
	o.Params = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *Task) GetStats() map[string]map[string]interface{} {
	if o == nil || o.Stats == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetStatsOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.Stats == nil {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *Task) HasStats() bool {
	if o != nil && o.Stats != nil {
		return true
	}

	return false
}

// SetStats gets a reference to the given map[string]map[string]interface{} and assigns it to the Stats field.
func (o *Task) SetStats(v map[string]map[string]interface{}) {
	o.Stats = &v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *Task) GetHidden() bool {
	if o == nil || o.Hidden == nil {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetHiddenOk() (*bool, bool) {
	if o == nil || o.Hidden == nil {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *Task) HasHidden() bool {
	if o != nil && o.Hidden != nil {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *Task) SetHidden(v bool) {
	o.Hidden = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *Task) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *Task) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *Task) SetParentId(v string) {
	o.ParentId = &v
}

// GetRecur returns the Recur field value if set, zero value otherwise.
func (o *Task) GetRecur() bool {
	if o == nil || o.Recur == nil {
		var ret bool
		return ret
	}
	return *o.Recur
}

// GetRecurOk returns a tuple with the Recur field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetRecurOk() (*bool, bool) {
	if o == nil || o.Recur == nil {
		return nil, false
	}
	return o.Recur, true
}

// HasRecur returns a boolean if a field has been set.
func (o *Task) HasRecur() bool {
	if o != nil && o.Recur != nil {
		return true
	}

	return false
}

// SetRecur gets a reference to the given bool and assigns it to the Recur field.
func (o *Task) SetRecur(v bool) {
	o.Recur = &v
}

// GetRecurFrequency returns the RecurFrequency field value if set, zero value otherwise.
func (o *Task) GetRecurFrequency() string {
	if o == nil || o.RecurFrequency == nil {
		var ret string
		return ret
	}
	return *o.RecurFrequency
}

// GetRecurFrequencyOk returns a tuple with the RecurFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetRecurFrequencyOk() (*string, bool) {
	if o == nil || o.RecurFrequency == nil {
		return nil, false
	}
	return o.RecurFrequency, true
}

// HasRecurFrequency returns a boolean if a field has been set.
func (o *Task) HasRecurFrequency() bool {
	if o != nil && o.RecurFrequency != nil {
		return true
	}

	return false
}

// SetRecurFrequency gets a reference to the given string and assigns it to the RecurFrequency field.
func (o *Task) SetRecurFrequency(v string) {
	o.RecurFrequency = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *Task) GetStartTime() int64 {
	if o == nil || o.StartTime == nil {
		var ret int64
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetStartTimeOk() (*int64, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *Task) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int64 and assigns it to the StartTime field.
func (o *Task) SetStartTime(v int64) {
	o.StartTime = &v
}

// GetRecurLast returns the RecurLast field value if set, zero value otherwise.
func (o *Task) GetRecurLast() int64 {
	if o == nil || o.RecurLast == nil {
		var ret int64
		return ret
	}
	return *o.RecurLast
}

// GetRecurLastOk returns a tuple with the RecurLast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetRecurLastOk() (*int64, bool) {
	if o == nil || o.RecurLast == nil {
		return nil, false
	}
	return o.RecurLast, true
}

// HasRecurLast returns a boolean if a field has been set.
func (o *Task) HasRecurLast() bool {
	if o != nil && o.RecurLast != nil {
		return true
	}

	return false
}

// SetRecurLast gets a reference to the given int64 and assigns it to the RecurLast field.
func (o *Task) SetRecurLast(v int64) {
	o.RecurLast = &v
}

// GetRecurNext returns the RecurNext field value if set, zero value otherwise.
func (o *Task) GetRecurNext() int64 {
	if o == nil || o.RecurNext == nil {
		var ret int64
		return ret
	}
	return *o.RecurNext
}

// GetRecurNextOk returns a tuple with the RecurNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetRecurNextOk() (*int64, bool) {
	if o == nil || o.RecurNext == nil {
		return nil, false
	}
	return o.RecurNext, true
}

// HasRecurNext returns a boolean if a field has been set.
func (o *Task) HasRecurNext() bool {
	if o != nil && o.RecurNext != nil {
		return true
	}

	return false
}

// SetRecurNext gets a reference to the given int64 and assigns it to the RecurNext field.
func (o *Task) SetRecurNext(v int64) {
	o.RecurNext = &v
}

// GetRecurLastTaskId returns the RecurLastTaskId field value if set, zero value otherwise.
func (o *Task) GetRecurLastTaskId() string {
	if o == nil || o.RecurLastTaskId == nil {
		var ret string
		return ret
	}
	return *o.RecurLastTaskId
}

// GetRecurLastTaskIdOk returns a tuple with the RecurLastTaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Task) GetRecurLastTaskIdOk() (*string, bool) {
	if o == nil || o.RecurLastTaskId == nil {
		return nil, false
	}
	return o.RecurLastTaskId, true
}

// HasRecurLastTaskId returns a boolean if a field has been set.
func (o *Task) HasRecurLastTaskId() bool {
	if o != nil && o.RecurLastTaskId != nil {
		return true
	}

	return false
}

// SetRecurLastTaskId gets a reference to the given string and assigns it to the RecurLastTaskId field.
func (o *Task) SetRecurLastTaskId(v string) {
	o.RecurLastTaskId = &v
}

func (o Task) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.OrganizationId != nil {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if o.AgentId != nil {
		toSerialize["agent_id"] = o.AgentId
	}
	if o.SiteId != nil {
		toSerialize["site_id"] = o.SiteId
	}
	if o.CruncherId != nil {
		toSerialize["cruncher_id"] = o.CruncherId
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if o.CreatedByUserId != nil {
		toSerialize["created_by_user_id"] = o.CreatedByUserId
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}
	if o.Stats != nil {
		toSerialize["stats"] = o.Stats
	}
	if o.Hidden != nil {
		toSerialize["hidden"] = o.Hidden
	}
	if o.ParentId != nil {
		toSerialize["parent_id"] = o.ParentId
	}
	if o.Recur != nil {
		toSerialize["recur"] = o.Recur
	}
	if o.RecurFrequency != nil {
		toSerialize["recur_frequency"] = o.RecurFrequency
	}
	if o.StartTime != nil {
		toSerialize["start_time"] = o.StartTime
	}
	if o.RecurLast != nil {
		toSerialize["recur_last"] = o.RecurLast
	}
	if o.RecurNext != nil {
		toSerialize["recur_next"] = o.RecurNext
	}
	if o.RecurLastTaskId != nil {
		toSerialize["recur_last_task_id"] = o.RecurLastTaskId
	}
	return json.Marshal(toSerialize)
}

type NullableTask struct {
	value *Task
	isSet bool
}

func (v NullableTask) Get() *Task {
	return v.value
}

func (v *NullableTask) Set(val *Task) {
	v.value = val
	v.isSet = true
}

func (v NullableTask) IsSet() bool {
	return v.isSet
}

func (v *NullableTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTask(val *Task) *NullableTask {
	return &NullableTask{value: val, isSet: true}
}

func (v NullableTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
